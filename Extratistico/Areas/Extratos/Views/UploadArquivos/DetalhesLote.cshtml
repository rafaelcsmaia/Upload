@model IEnumerable<Extratistico.Areas.Extratos.Models.Entidades.ExtratoVM>

@{
    Layout = "~/Views/Shared/Master.cshtml";
}

<head>
    <link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
    <style>
        .positivo {
            color: green;
            font-weight: bold;
        }

        .negativo {
            color: red;
            font-weight: bold;
        }
    </style>
</head>

<div class="content">

    <img src="../../../../Content/Images/Upload-64.png" alt="" class="content-img" />
    <h2>Detalhes da carga</h2>
    <p>Lote de: @ViewBag.data</p>

    <div class="options-list">
        @Html.Raw(Html.Button(HtmlHelpers.TypeActionLink.Normal, "../../../../Content/Images/delete-32.png", Html.ActionLink("Excluir Lote", "ExcluirLote", "UploadArquivos", new { tipo = @ViewBag.tipo, data = @ViewBag.data }, new { onclick = "return confirm('Confirma a exclusão do lote de carga de " + (@ViewBag.tipo=="CC" ? "Credito" : "Debito") + " do dia " + @ViewBag.data + " ?');" })))
    </div>

    @Html.Grid(Model).Columns(column =>
    {
        column.Add(c => c.Data).Titled("Data").Filterable(true).RenderValueAs(c => c.Data.ToShortDateString());
        column.Add().Encoded(false).Sanitized(false).Titled("Procedência").RenderValueAs(c => c.Procedencia == "D" ? "<img src='../../../../Content/Images/Dinheiro-32.png' alt='' />" : c.Procedencia == "CD" ? "<img src='../../../../Content/Images/Debito-32.png' alt=''/>" : "<img src='../../../../Content/Images/Credito-32.png' alt=''/>");
        column.Add(c => c.Operacao).Titled("Operação").Filterable(true);
        column.Add(c => c.Estabelecimento).Titled("Estabelecimento").Filterable(true);
        column.Add(c => c.Valor).Encoded(false)
        .Sanitized(false).Titled("Valor (R$)").Filterable(true)
        .RenderValueAs(c => c.Valor > 0 ? "<span class='positivo'>" + c.Valor + "</span>" : "<span class='negativo'>" + c.Valor + "</span>");
        column.Add().Encoded(false)
.Sanitized(false).Titled("Opções")
.RenderValueAs(c => Html.ActionLink("Excluir Registro", "Excluir", "UploadArquivos", new { tipo = c.Procedencia, documento = c.Documento, data = @ViewBag.data }, new { onclick = "return confirm('Confirma a exclusão do registro selecionado? Esta operação é permanente!');" }));
    }).Sortable(true).WithPaging(20).WithMultipleFilters()

</div>

