@model Extratistico.Models.Entidades.SGBD

@{
    ViewBag.Title = "Cadastrar";
    Layout = "~/Views/Shared/Master.cshtml";
}

<script src="../../../../Scripts/jquery-1.9.1.min.js" type="text/javascript"></script>
<link href="../../../../Content/Database.css" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<script type="text/jscript">
    $(document).ready(function () {
        document.getElementsByName("btnSave")[0].disabled = true;
        document.getElementsByName("btnSave")[0].className = 'disabled';
    });
    function testConnection() {
    $.post("/Configurações/SGBD/TestarConexao", { connString: $("#ConnectionString").val(), provider: $("#Tipo").val() },
        function (resp) {
            if (resp) {
                alert('Conexão bem sucedida!');
                document.getElementsByName("btnSave")[0].disabled = '';
                document.getElementsByTagName("img")[1].src = '../../../../Content/Images/habilitar-20.png';
                document.getElementsByName("btnSave")[0].className = '';
            }
            else {
                document.getElementsByName("btnSave")[0].disabled = 'disabled';
                alert('Falha ao conectar com a base de dados!');
                document.getElementsByName("btnSave")[0].className = 'disabled';
            }
        });

    }
</script> 
 <div class="content">
    <div class=@Model.Tipo></div>
    <h2>
        Base de Dados @Model.Tipo</h2>
    <p>
        Configurando a Base de Dados do @Model.Tipo que será utilizada.
    </p>

    @using (Html.BeginForm()) {
        @Html.ValidationSummary(true)
        <fieldset>
            <legend>sgbd</legend>

            <div class="editor-label">
                @Html.LabelFor(model => model.Tipo):
                @Html.Label(Model.Tipo)
                @Html.HiddenFor(model => model.Tipo)
            </div>

            <br />
            <div class="editor-label">
                @Html.LabelFor(model => model.ConnectionString):
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ConnectionString)
                @Html.ValidationMessageFor(model => model.ConnectionString)
            </div>

            <div class="btn">
                @Html.Raw(Html.Button(HtmlHelpers.TypeButton.Submit, "../../../../Content/Images/salvar-20.png", "btnSave", "Salvar"))
                @Html.Raw(Html.ButtonJS("../../../../Content/Images/lightning-20.png", "btnTestConnection", "Testar Conexão", "testConnection()"))
            </div>
        
        </fieldset>
        <div>
            @Html.Raw(Html.Button(HtmlHelpers.TypeActionLink.Normal, "../../../../Content/Images/voltar-20.png", Html.ActionLink("Voltar", "Configurar", "SGBD", new { area = "Configurações" },null)))
        </div>
    }
    </div>